const { testJsAddons } = require('./js-native');
const { testServerEndpoints } = require('./server');
const { testCppAddons } = require('./cpp-addon');
const { testRustAddons } = require('./rust-addon');
const { testWasmAddons } = require('./wasm');

async function runAllTests() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤...\n');
  
  const results = {
    js: await testJsAddons(),
    rust: await testRustAddons(),
    cpp: await testCppAddons(), 
    wasm: await testWasmAddons(),
    server: await testServerEndpoints()
  };

  const passedTests = Object.values(results).filter(Boolean).length;
  const totalTests = Object.keys(results).length;

  console.log('üìä –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
  console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${passedTests}/${totalTests} –Ω–∞–±–æ—Ä–æ–≤ —Ç–µ—Å—Ç–æ–≤`);
  
  Object.entries(results).forEach(([name, passed]) => {
    console.log(`  ${passed ? '‚úÖ' : '‚ùå'} ${name}`);
  });

  if (passedTests === totalTests) {
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    process.exit(0);
  } else {
    console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã –∏–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω—ã');
    process.exit(0);
  }
}

runAllTests().catch(console.error);